<?xml version="1.0" ?>
<robot name="r2" xmlns:xacro="http://ros.org/wiki/xacro">

  <material name="darkgrey">
    <color rgba="0.1 0.1 0.1 1.0" />
  </material>
  <material name="grey">
    <color rgba="0.5 0.5 0.5 1.0" />
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0" />
  </material>

  <xacro:property name="M_PI" value="3.1415926535897931" />
  <xacro:property name="M_PI_2" value="1.570796327" />
  <xacro:property name="DEG_TO_RAD" value="0.017453293" />

  <xacro:property name="base_size_x" value="0.44" />
  <xacro:property name="base_size_y" value="0.40" />
  <xacro:property name="base_size_z" value="0.02" />
  <xacro:property name="base_mass" value="1.000" />

  <xacro:property name="wheel_radius" value="0.03" />
  <xacro:property name="wheel_width" value="0.03" />
  <xacro:property name="wheel_offset_x" value="0.19"/>
  <xacro:property name="wheel_offset_y" value="0.22"/>
  <xacro:property name="wheel_offset_z" value="-0.03"/>
  <xacro:property name="wheel_mass" value="0.500"/>

  <xacro:macro name="box_inertia" params="m x y z">
    <inertia ixx="${m*(y*y+z*z)/12}" ixy="0" ixz="0"
             iyy="${m*(x*x+z*z)/12}" iyz="0"
             izz="${m*(x*x+z*z)/12}"
    />
  </xacro:macro>
  <xacro:macro name="cylinder_inertia" params="m r w">
    <inertia ixx="${m*(3*r*r+w*w)/12}" ixy="0" ixz="0"
             iyy="${m*(3*r*r+w*w)/12}" iyz="0"
             izz="${m*r*r/2}"
    />
  </xacro:macro>

  <link name="base_footprint" />

  <joint name="base_joint" type="fixed">
    <parent link="base_footprint" />
    <child link="base_link" />
    <origin xyz="0 0 0" rpy="0 0 0" />
  </joint>
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${base_size_x} ${base_size_y} ${base_size_z}" />
      </geometry>
      <material name="grey" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>   
        <box size="${base_size_x} ${base_size_y} ${base_size_z}" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <mass value="${base_mass}"/>
      <xacro:box_inertia m="${base_mass}" x="${base_size_x}" y="${base_size_y}" z="${base_size_z}"/>
    </inertial>
  </link>

  <joint name="fl_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="fl_wheel_link"/>
    <origin xyz="${-wheel_offset_x} ${-wheel_offset_y} ${wheel_offset_z}" rpy="0 0 ${-M_PI/2}" />
    <axis xyz="1 0 0" rpy="0 0 0"/>
  </joint>
  <link name="fl_wheel_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        
        <mesh filename="package://r2_description/meshes/fl_wheel_link.STL" scale="0.6 0.6 0.6" />
      </geometry>
      <material name="darkgrey" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>   
        <box size="${wheel_width} ${wheel_radius*2} ${wheel_radius*2}" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="${wheel_mass}" />
      <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" w="${wheel_width}" />
    </inertial>
  </link>

  <joint name="fr_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="fr_wheel_link"/>
    <origin xyz="${-wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 ${M_PI/2}" />
    <axis xyz="-1 0 0" rpy="0 0 0"/>
  </joint>
  <link name="fr_wheel_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://r2_description/meshes/fr_wheel_link.STL" scale="0.6 0.6 0.6" />
      </geometry>
      <material name="darkgrey" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>   
        <box size="${wheel_width} ${wheel_radius*2} ${wheel_radius*2}" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="${wheel_mass}" />
      <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" w="${wheel_width}" />
    </inertial>
  </link>

  <joint name="rl_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="rl_wheel_link"/>
    <origin xyz="${wheel_offset_x} ${-wheel_offset_y} ${wheel_offset_z}" rpy="0 0 ${-M_PI/2}" />
    <axis xyz="1 0 0" rpy="0 0 0"/>
  </joint>
  <link name="rl_wheel_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://r2_description/meshes/rl_wheel_link.STL" scale="0.6 0.6 0.6" />
      </geometry>
      <material name="darkgrey" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>   
        <box size="${wheel_width} ${wheel_radius*2} ${wheel_radius*2}" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="${wheel_mass}" />
      <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" w="${wheel_width}" />
    </inertial>
  </link>

  <joint name="rr_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="rr_wheel_link"/>
    <origin xyz="${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 ${M_PI/2}" />
    <axis xyz="-1 0 0" rpy="0 0 0"/>
  </joint>
  <link name="rr_wheel_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://r2_description/meshes/rr_wheel_link.STL" scale="0.6 0.6 0.6" />
      </geometry>
      <material name="darkgrey" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>   
        <box size="${wheel_width} ${wheel_radius*2} ${wheel_radius*2}" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="${wheel_mass}" />
      <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" w="${wheel_width}" />
    </inertial>
  </link>

  <gazebo>
    <plugin name="planar_move_plugin" filename="libgazebo_ros_planar_move.so">
      <robotNamespace>/</robotNamespace>
      <bodyName>base_link</bodyName>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>100.0</odometryRate>
      <robotBaseFrame>base_footprint</robotBaseFrame>
    </plugin>
  </gazebo>


  <xacro:property name="sensor_size_x" value="0.02" />
  <xacro:property name="sensor_size_y" value="0.03" />
  <xacro:property name="sensor_size_z" value="0.01" />
  <xacro:property name="sensor_mass" value="0.100" />



  <joint name="luna_1_joint" type="fixed">
    <parent link="base_link" />
    <child link="luna_1" />
    <origin xyz="0.22 0.1 0" rpy="0 0 0" />
  </joint>
  
  <link name="luna_1">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${sensor_size_x} ${sensor_size_y} ${sensor_size_z}" />
      </geometry>
      <material name="blue" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${sensor_size_x} ${sensor_size_y} ${sensor_size_z}" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <mass value="${sensor_mass}"/>
      <xacro:box_inertia m="${sensor_mass}" x="${sensor_size_x}" y="${sensor_size_y}" z="${sensor_size_z}"/>
    </inertial>
  </link>

  <joint name="luna_2_joint" type="fixed">
    <parent link="base_link" />
    <child link="luna_2" />
    <origin xyz="0.22 -0.1 0" rpy="0 0 0" />
  </joint>
  
  <link name="luna_2">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${sensor_size_x} ${sensor_size_y} ${sensor_size_z}" />
      </geometry>
      <material name="blue" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${sensor_size_x} ${sensor_size_y} ${sensor_size_z}" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <mass value="${sensor_mass}"/>
      <xacro:box_inertia m="${sensor_mass}" x="${sensor_size_x}" y="${sensor_size_y}" z="${sensor_size_z}"/>
    </inertial>
  </link>

  <joint name="luna_3_joint" type="fixed">
    <parent link="base_link" />
    <child link="luna_3" />
    <origin xyz="0.1 -0.2 0" rpy="0 0 ${-M_PI/2}" />
  </joint>

  <link name = "luna_3">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${sensor_size_x} ${sensor_size_y} ${sensor_size_z}" />
      </geometry>
      <material name="blue" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${sensor_size_x} ${sensor_size_y} ${sensor_size_z}" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <mass value="${sensor_mass}"/>
      <xacro:box_inertia m="${sensor_mass}" x="${sensor_size_x}" y="${sensor_size_y}" z="${sensor_size_z}"/>
    </inertial>
  </link>

  <joint name="luna_4_joint" type="fixed">
    <parent link="base_link" />
    <child link="luna_4" />
    <origin xyz="-0.1 -0.2 0" rpy="0 0 ${-M_PI/2}" />
  </joint>

  <link name = "luna_4">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${sensor_size_x} ${sensor_size_y} ${sensor_size_z}" />
      </geometry>
      <material name="blue" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${sensor_size_x} ${sensor_size_y} ${sensor_size_z}" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <mass value="${sensor_mass}"/>
      <xacro:box_inertia m="${sensor_mass}" x="${sensor_size_x}" y="${sensor_size_y}" z="${sensor_size_z}"/>
    </inertial>
  </link>

  <gazebo reference="luna_1">
      <sensor name="luna_1" type="ray">
          <always_on>true</always_on>
          <visualize>true</visualize>
          <pose>0.0 0 0.0 0 0 0</pose>
          <update_rate>5</update_rate>
          <ray>
              <scan>
                  <horizontal>
                      <samples>5</samples>
                      <resolution>1.0</resolution>
                      <min_angle>0</min_angle>
                      <max_angle>0</max_angle>
                  </horizontal>
                  <vertical>
                      <samples>5</samples>
                      <resolution>1.0</resolution>
                      <min_angle>0.0</min_angle>
                      <max_angle>0.0</max_angle>
                  </vertical>
              </scan>
              <range>
                  <min>0.02</min>
                  <max>8</max>
                  <resolution>0.01</resolution>
              </range>
              <noise>
                  <type>gaussian</type>
                  <mean>0.0</mean>
                  <stddev>0.01</stddev>
              </noise>
          </ray>
          <plugin name="luna_1" filename="libgazebo_ros_ray_sensor.so">
              <ros>
                  <namespace>distance</namespace>
                  <remapping>~/out:=luna_1</remapping>
              </ros>
              <output_type>sensor_msgs/Range</output_type>
              <radiation_type>ultrasound</radiation_type>
              <frame_name>luna_1_dist_sensor</frame_name>
          </plugin>
      </sensor>
      <material>Gazebo/Blue</material>
  </gazebo>

  <gazebo>
      <sensor name="luna_2" type="ray">
          <always_on>true</always_on>
          <visualize>true</visualize>
          <pose>0.0 0 0.0 0 0 0</pose>
          <update_rate>5</update_rate>
          <ray>
              <scan>
                  <horizontal>
                      <samples>5</samples>
                      <resolution>1.0</resolution>
                      <min_angle>0</min_angle>
                      <max_angle>0</max_angle>
                  </horizontal>
                  <vertical>
                      <samples>5</samples>
                      <resolution>1.0</resolution>
                      <min_angle>0.0</min_angle>
                      <max_angle>0.0</max_angle>
                  </vertical>
              </scan>
              <range>
                  <min>0.02</min>
                  <max>8</max>
                  <resolution>0.01</resolution>
              </range>
              <noise>
                  <type>gaussian</type>
                  <mean>0.0</mean>
                  <stddev>0.01</stddev>
              </noise>
          </ray>
          <plugin name="luna_2" filename="libgazebo_ros_ray_sensor.so">
              <ros>
                  <namespace>distance</namespace>
                  <remapping>~/out:=luna_2</remapping>
              </ros>
              <output_type>sensor_msgs/Range</output_type>
              <radiation_type>ultrasound</radiation_type>
              <frame_name>luna_2_dist_sensor</frame_name>
          </plugin>
      </sensor>
      <material>Gazebo/Blue</material>
  </gazebo>

  <gazebo>
      <sensor name="luna_3" type="ray">
          <always_on>true</always_on>
          <visualize>true</visualize>
          <pose>0.0 0 0.0 0 0 0</pose>
          <update_rate>5</update_rate>
          <ray>
              <scan>
                  <horizontal>
                      <samples>5</samples>
                      <resolution>1.0</resolution>
                      <min_angle>0</min_angle>
                      <max_angle>0</max_angle>
                  </horizontal>
                  <vertical>
                      <samples>5</samples>
                      <resolution>1.0</resolution>
                      <min_angle>0.0</min_angle>
                      <max_angle>0.0</max_angle>
                  </vertical>
              </scan>
              <range>
                  <min>0.02</min>
                  <max>8</max>
                  <resolution>0.01</resolution>
              </range>
              <noise>
                  <type>gaussian</type>
                  <mean>0.0</mean>
                  <stddev>0.01</stddev>
              </noise>
          </ray>
          <plugin name="luna_3" filename="libgazebo_ros_ray_sensor.so">
              <ros>
                  <namespace>distance</namespace>
                  <remapping>~/out:=luna_3</remapping>
              </ros>
              <output_type>sensor_msgs/Range</output_type>
              <radiation_type>ultrasound</radiation_type>
              <frame_name>luna_3_dist_sensor</frame_name>
          </plugin>
      </sensor>
      <material>Gazebo/Blue</material>

  </gazebo>

  <gazebo>
      <sensor name="luna_4" type="ray">
          <always_on>true</always_on>
          <visualize>true</visualize>
          <pose>0.0 0 0.0 0 0 0</pose>
          <update_rate>5</update_rate>
          <ray>
              <scan>
                  <horizontal>
                      <samples>5</samples>
                      <resolution>1.0</resolution>
                      <min_angle>0</min_angle>
                      <max_angle>0</max_angle>
                  </horizontal>
                  <vertical>
                      <samples>5</samples>
                      <resolution>1.0</resolution>
                      <min_angle>0.0</min_angle>
                      <max_angle>0.0</max_angle>
                  </vertical>
              </scan>
              <range>
                  <min>0.02</min>
                  <max>8</max>
                  <resolution>0.01</resolution>
              </range>
              <noise>
                  <type>gaussian</type>
                  <mean>0.0</mean>
                  <stddev>0.01</stddev>
              </noise>
          </ray>
          <plugin name="luna_4" filename="libgazebo_ros_ray_sensor.so">
              <ros>
                  <namespace>distance</namespace>
                  <remapping>~/out:=luna_4</remapping>
              </ros>
              <output_type>sensor_msgs/Range</output_type>
              <radiation_type>ultrasound</radiation_type>
              <frame_name>luna_4_dist_sensor</frame_name>
          </plugin>
      </sensor>
      <material>Gazebo/Blue</material>
  </gazebo>

  <!-- IMU LINK AT CENTER OF ROBOT -->
  <joint name="imu_joint" type="fixed">
    <parent link="base_link" />
    <child link="imu_link" />
    <origin xyz="0 0 0.01" rpy="0 0 0" />
  </joint>

  <link name="imu_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.02 0.02 0.02" />
      </geometry>
      <material name="grey" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.02 0.02 0.02" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <mass value="0.100"/>
      <xacro:box_inertia m="0.100" x="0.02" y="0.02" z="0.02"/>
    </inertial>
  </link>

  <gazebo reference="imu_link">
    <sensor name="r2_imu" type="imu">
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <imu>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
        <plugin name="bytes_imu" filename="libgazebo_ros_imu_sensor.so">
            <ros>
                <namespace>imu</namespace>
                <remapping>~/out:=data</remapping>
            </ros>
            <initial_orientation_as_reference>true</initial_orientation_as_reference>
        </plugin>
    </sensor>
</gazebo>
</robot>
